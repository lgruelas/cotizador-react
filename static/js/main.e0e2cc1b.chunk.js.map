{"version":3,"sources":["presentational/EntireForm.jsx","App.js","serviceWorker.js","index.js","planet.png"],"names":["EntireForm","props","b","Date","dateFormat","getDate","getMonth","getFullYear","state","date1","date2","date3","date4","date5","quote1","quote2","quote3","quote4","quote5","total","savings","anual","sistema_solar","eficiencia","invest_return","client","service","power","panels","panel_power","panel_desc","total_big","anual_pay_solar","anual_pay_actual","savings_chart","savings_proportion","invest_return_big","subtotal_usd","iva_usd","total_usd","total_mxn","currency_rate","usd_rate","quantity1","description1","quantity2","description2","quantity3","description3","quantity4","description4","quantity5","description5","quantity6","description6","quantity7","description7","panel_quantity","table","month","hours","consume","production","pay_before","pay_after","totals","handleSubmit","bind","handleChange","this","getRates","then","result","setState","data","rates","MXN","toFixed","axios","get","dict","formatter","Intl","NumberFormat","style","currency","parseFloat","usd_value","currency_factor","format","parseInt","i","Math","round","formatDictTable","formatDictTotals","tabla","map","element","slice","lista","to_send","format_output","post","headers","responseType","response","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","e","target","id","value","row","new_totals","new_value","calculateNewTotal","oldState","el","now_totals","column","forEach","cellEditProp","mode","blurToSave","afterSaveCell","forceUpdate","className","height","tableHeaderClass","cellEdit","dataField","isKey","scope","src","planet","width","marginBottom","htmlFor","InputGroup","FormControl","onChange","maxLength","for","selected","type","step","placeholder","defaultValue","Button","onClick","variant","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e0e2cc1b.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport planet from './../planet.png';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/css/react-bootstrap-table.css';\n\nclass EntireForm extends React.Component {\n    constructor(props) {\n        super(props);\n        let b = new Date();\n        let dateFormat = `${b.getDate()}/${b.getMonth()>8?\"\":0}${b.getMonth()+1}/${b.getFullYear()}`;\n        this.state = {\n            date1: dateFormat,\n            date2: dateFormat,\n            date3: dateFormat,\n            date4: dateFormat,\n            date5: dateFormat,\n            quote1: \"\",\n            quote2: \"\",\n            quote3: \"\",\n            quote4: \"\",\n            quote5: \"\",\n            total: \"\",\n            savings: \"\",\n            anual: \"25 años\",\n            sistema_solar: \"\",\n            eficiencia: \"\",\n            invest_return: \"\",\n            client: \"\",\n            service: \"\",\n            power: \"\",\n            panels: \"\",\n            panel_power: \"\",\n            panel_desc: \"\",\n            total_big: \"\",\n            anual_pay_solar: \"\",\n            anual_pay_actual: \"\",\n            savings_chart: \"\",\n            savings_proportion: \"\",\n            invest_return_big: \"\",\n            subtotal_usd: \"\",\n            iva_usd: \"\",\n            total_usd: \"\",\n            total_mxn: \"\",\n            currency_rate: \"\",\n            usd_rate: 0,\n            quantity1: \"\",\n            description1: \"\",\n            quantity2: \"\",\n            description2: \"\",\n            quantity3: \"\",\n            description3: \"\",\n            quantity4: \"\",\n            description4: \"\",\n            quantity5: \"\",\n            description5: \"\",\n            quantity6: \"\",\n            description6: \"\",\n            quantity7: \"\",\n            description7: \"\",\n            panel_quantity: \"\",\n            table: [\n                {\n                    month: 'Enero',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Febrero',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Marzo',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Abril',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Mayo',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Junio',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Julio',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Agosto',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Septiembre',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Octubre',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Noviembre',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Diciembre',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                }\n            ],\n            totals: [0, 0, 0, 0, 0]\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRates().then(result =>{\n            this.setState({currency_rate: result.data.rates.MXN.toFixed(2)})\n        });\n    }\n\n    getRates() {\n        return axios.get(\"https://api.exchangeratesapi.io/latest?symbols=MXN&base=USD\");\n    }\n\n    format_output(dict) {\n        var formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n        });\n        let savings = parseFloat(this.state.totals[3]) - parseFloat(this.state.totals[4]);\n        let usd_value = parseFloat(dict[\"total_usd\"]);\n        let currency_factor = dict[\"usd_rate\"] == 0 ? parseFloat(dict[\"currency_rate\"]) : parseFloat(dict[\"usd_rate\"]);\n        dict[\"subtotal_usd\"] = formatter.format(usd_value / 1.16);\n        dict[\"iva_usd\"] = formatter.format(usd_value*0.16);\n        dict[\"total_mxn\"] = formatter.format(usd_value*currency_factor);\n        dict[\"total_big\"] = dict[\"total_mxn\"];\n        dict[\"total\"] = dict[\"total_mxn\"];\n        dict[\"total_usd\"] = formatter.format(dict[\"total_usd\"]);\n        dict[\"panel_quantity\"] = parseInt(dict[\"panels\"]).toFixed(2);\n        dict[\"panel_desc\"] = `${dict[\"panel_desc\"]} ${dict[\"panel_power\"]} watts`;\n        dict[\"power\"] = `${(parseInt(dict[\"panel_power\"]) * parseInt(dict[\"panels\"]) / 1000).toFixed(2)} KWp`\n        dict[\"panel_power\"] = `De ${dict[\"panel_power\"]} Wp`;\n        dict[\"panels\"] = `${dict[\"panels\"]} paneles`;\n        for (let i = 1; i <= 7; i++) {\n            if (dict[`quantity${i}`]) {\n                dict[`quantity${i}`] = parseInt(dict[`quantity${i}`]).toFixed(2);\n            }\n        }\n        dict[\"savings\"] = formatter.format(savings);\n        dict[\"invest_return\"] = `${(parseFloat(this.state.totals[4])/savings).toFixed(1)} años`;\n        dict[\"anual_pay_solar\"] = formatter.format(parseFloat(this.state.totals[4]));\n        dict[\"anual_pay_actual\"] = formatter.format(parseFloat(this.state.totals[3]));\n        dict[\"savings_chart\"] = dict[\"savings\"];\n        dict[\"savings_proportion\"] = `${Math.round((savings/parseFloat(this.state.totals[3]))*100)}%`;\n        dict[\"invest_return_big\"] = dict[\"invest_return\"];\n        this.formatDictTable(dict[\"table\"], formatter);\n        this.formatDictTotals(dict[\"totals\"], formatter);\n    }\n\n    formatDictTable(tabla, formatter) {\n        tabla = tabla.map(element => {\n            element.production = `${formatter.format(element.production).slice(1)}KWh`;\n            element.consume = `${formatter.format(element.consume).slice(1)}KWh`;\n            element.pay_before = `${formatter.format(element.pay_before)} MXN`;\n            element.pay_after = `${formatter.format(element.pay_after)} MXN`;\n        });\n    }\n\n    formatDictTotals(lista, formatter) {\n        lista[1] = `${formatter.format(lista[1]).slice(1)}KWh`;\n        lista[2] = `${formatter.format(lista[2]).slice(1)}KWh`;\n        lista[3] = `${formatter.format(lista[3])} MXN`;\n        lista[4] = `${formatter.format(lista[4])} MXN`;\n    }\n\n    handleSubmit() {\n        let to_send = {...this.state};\n        this.format_output(to_send);\n        axios.post(`https://5c2abf42.ngrok.io/generate`, to_send, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow_Origin': '*',\n                'Content-Disposition': 'attachment; filename=\"cotizacion.pdf\"',\n                'Content-Transfer-Encoding': 'binary'\n            },\n            responseType: 'blob'\n        })\n        .then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', 'cotizacion.pdf');\n            document.body.appendChild(link);\n            link.click();\n        })\n    };\n\n    handleChange(e) {\n        if (e.target.id == 'quote' ) {\n            for (let i = 1; i <= 5; i++) {\n                this.setState({[`${e.target.id}${i}`]: `No. de cotización: ${e.target.value}`});\n            }\n        } else {\n            this.setState({[e.target.id]: e.target.value});\n        }\n    }\n\n    calculateProduction(row, new_totals) {\n        if (this.state.sistema_solar && this.state.eficiencia) {\n            let new_value = \"\";\n            new_value = Math.round(parseFloat(row[\"hours\"])*parseFloat(this.state.sistema_solar)*parseFloat(this.state.eficiencia)*31);\n            new_totals[2] = this.calculateNewTotal(\"production\", row.month, new_value);\n            this.setState(oldState => ({\n                totals: new_totals,\n                table: oldState.table.map(\n                    el => el.month === row.month? { ...el, production: new_value }: el\n                )\n            }));\n        } else {\n            this.setState({totals: new_totals});\n        }\n    }\n\n    calculatePaySolar(row, now_totals) {\n\n    }\n\n    calculateNewTotal(column, month, value) {\n        month = month || \"not_assigned\";\n        let total = 0;\n        this.state.table.forEach(element => {\n            if (element.month === month) {\n                total += value;\n            } else if (element[column]) {\n                total += parseFloat(element[column]);\n            }\n        });\n        return total;\n    }\n\n    forceUpdate(row, column) {\n        let new_totals = this.state.totals;\n        let total = this.calculateNewTotal(column);\n        switch(column) {\n            case 'hours':\n                new_totals[0] = (total/12.0).toFixed(2);\n                //this.calculateProduction(row, new_totals);\n                this.setState({totals: new_totals});\n                break;\n            case 'consume':\n                new_totals[1] = (total).toFixed(2);\n                this.setState({totals: new_totals});\n                break;\n            case 'pay_before':\n                new_totals[3] = (total).toFixed(2);\n                this.setState({totals: new_totals});\n                break;\n            case 'pay_after':\n                new_totals[4] = (total).toFixed(2);\n                this.setState({totals: new_totals});\n                break;\n            case 'production':\n                new_totals[2] = (total).toFixed(2);\n                this.setState({totals: new_totals});\n                break;\n        }\n    }\n\n    render() {\n        const cellEditProp = {\n            mode: 'click',\n            blurToSave: true,\n            afterSaveCell: (row, column) => {this.forceUpdate(row, column)}\n        };\n        return (\n            <div className=\"container\">\n                <div style={{height: \"10vh\"}}>\n\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-8 order-md-2 mb-4\">\n                    <BootstrapTable data={ this.state.table } tableHeaderClass={\"thead-dark\"} cellEdit={cellEditProp}>\n                        <TableHeaderColumn dataField='month' isKey>Mes</TableHeaderColumn>\n                        <TableHeaderColumn dataField='hours'>Horas de irradiación</TableHeaderColumn>\n                        <TableHeaderColumn dataField='consume'>Consumo</TableHeaderColumn>\n                        <TableHeaderColumn dataField='production'>Producción</TableHeaderColumn>\n                        <TableHeaderColumn dataField='pay_before'>Pago antes</TableHeaderColumn>\n                        <TableHeaderColumn dataField='pay_after'>Pago con energía solar</TableHeaderColumn>\n                    </BootstrapTable>\n                        <table className=\"table\">\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th scope=\"col\">Total</th>\n                                    <th scope=\"col\">{this.state.totals[0]}</th>\n                                    <th scope=\"col\">{this.state.totals[1]}</th>\n                                    <th scope=\"col\">{this.state.totals[2]}</th>\n                                    <th scope=\"col\">{this.state.totals[3]}</th>\n                                    <th scope=\"col\">{this.state.totals[4]}</th>\n                                </tr>\n                            </thead>\n                        </table>\n                    </div>\n\n                    <div className=\"col-md-4 order-md-1\">\n                        <div className=\"row\">\n                            <div className=\"col-6 offset-3\">\n                                <img src={planet} height=\"120\" width=\"120\" style={{marginBottom:\"2vh\"}} />\n                            </div>\n                        </div>\n\n                        <h4 className=\"mb-3\">Arma tu proyecto</h4>\n\n                        <label htmlFor=\"client\">Cliente</label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl onChange={this.handleChange} id=\"client\" />\n                        </InputGroup>\n\n                        <label htmlFor=\"direccion\">Direccion</label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl id=\"direccion\" />\n                        </InputGroup>\n\n                        <label htmlFor=\"city\">Ciudad</label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl id=\"city\"/>\n                        </InputGroup>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"service\"># Servicio</label>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl onChange={this.handleChange} id=\"service\" />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"quote\"># Cotizacion</label>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl onChange={this.handleChange} maxLength=\"4\" id=\"quote\" />\n                                </InputGroup>\n                            </div>\n                        </div>\n\n                        <div className=\"row mb-3\">\n                            <div className=\"col-md-12 mb-3\">\n                                <label for=\"tarifa\">Tipo de tarifa</label>\n                                <select id=\"tarifa\" className=\"browser-default custom-select\">\n                                    <option selected>1</option>\n                                    <option value=\"1\">1A</option>\n                                    <option value=\"2\">1B</option>\n                                    <option value=\"3\">1C</option>\n                                    <option value=\"1\">1D</option>\n                                    <option value=\"2\">1E</option>\n                                    <option value=\"3\">1F</option>\n                                    <option value=\"3\">PDBT</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"sistema_solar\">Sistema solar</label>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl onChange={this.handleChange} id=\"sistema_solar\" />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"eficiencia\">Eficienca</label>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl onChange={this.handleChange} id=\"eficiencia\" />\n                                </InputGroup>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr className=\"mb-4\" />\n\n                <div className=\"row\">\n                    <div className=\"col-2 offset-2\">\n                        Cantidad\n                    </div>\n                    <div className=\"col-8\">\n                        Descripción\n                    </div>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label for=\"inversor\">Paneles</label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"panels\" type=\"number\" step=\"any\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-6\">\n                        <FormControl onChange={this.handleChange} id=\"panel_desc\" type=\"text\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"panel_power\" type=\"number\" placeholder=\"Wp\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label for=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity1\" type=\"number\" step=\"any\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description1\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label for=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity2\" type=\"number\" step=\"any\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description2\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label for=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity3\" type=\"number\" step=\"any\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description3\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label for=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity4\" type=\"number\" step=\"any\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description4\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label for=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity5\" type=\"number\" step=\"any\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description5\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label for=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity6\" type=\"number\" step=\"any\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description6\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label for=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity7\" type=\"number\" step=\"any\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description7\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"total_usd\">Costo en dolares:</label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-4\">\n                        <FormControl onChange={this.handleChange} id=\"total_usd\" step=\"any\" placeholder=\"USD\" type=\"number\"/>\n                    </InputGroup>\n                    <div className=\"col-2\">\n                        <label htmlFor=\"usd_rate\">Tasa de cambio:</label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-4\">\n                        <FormControl id=\"usd_rate\" step=\"any\" onChange={this.handleChange} type=\"number\" defaultValue={this.state.currency_rate}/>\n                    </InputGroup>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-3 offset-9\">\n                        <Button onClick={this.handleSubmit} variant=\"primary\" id=\"submit\" style={{width: \"100%\"}}>Enviar</Button>\n                    </div>\n                </div>\n\n                <footer className=\"my-5 pt-5 text-muted text-center text-small\">\n                    <p className=\"mb-1\">&copy; 2020-2022 Centro de Inteligencia en Ahorro de Energía</p>\n                    <ul className=\"list-inline\">\n                        <li className=\"list-inline-item\"><a href=\"#\">Privacy</a></li>\n                        <li className=\"list-inline-item\"><a href=\"#\">Terms</a></li>\n                        <li className=\"list-inline-item\"><a href=\"#\">Support</a></li>\n                    </ul>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default EntireForm;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport EntireForm from './presentational/EntireForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EntireForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/planet.2e71a093.png\";"],"sourceRoot":""}