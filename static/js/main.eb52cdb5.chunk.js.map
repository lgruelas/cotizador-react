{"version":3,"sources":["presentational/variablesDomestic.js","presentational/EntireForm.jsx","App.js","serviceWorker.js","index.js","planet.png"],"names":["pay_before_temp_costs_domestic_1","Map","bajo","intermedio","excedente","cantidad_bajo","cantidad_intermedio","EntireForm","props","b","Date","dateFormat","getDate","getMonth","getFullYear","state","date1","date2","date3","date4","date5","quote1","quote2","quote3","quote4","quote5","total","savings","anual","sistema_solar","eficiencia","invest_return","client","service","power","panels","panel_power","panel_desc","total_big","anual_pay_solar","anual_pay_actual","savings_chart","savings_proportion","invest_return_big","subtotal_usd","iva_usd","saved_co2","saved_trees","total_usd","total_mxn","currency_rate","usd_rate","quantity1","description1","quantity2","description2","quantity3","description3","quantity4","description4","quantity5","description5","quantity6","description6","quantity7","description7","panel_quantity","table","month","hours","consume","production","pay_before","pay_after","totals","tarifa","pay_before_temps","console","log","pay_before_table","handleSubmit","bind","handleChange","handleChangeSelect","this","getRates","then","result","setState","data","rates","MXN","toFixed","axios","get","dict","formatter","Intl","NumberFormat","style","currency","parseFloat","usd_value","currency_factor","watts","parseInt","format","slice","Math","round","formatDictTable","formatDictTotals","tabla","map","element","lista","to_send","e","format_output","post","headers","responseType","response","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","target","id","i","value","row","new_totals","new_value","calculateNewTotal","payAfter","calculatePayAfter","oldState","el","column","forEach","new_rate","concat","cellEditProp","mode","blurToSave","afterSaveCell","forceUpdate","className","height","tableHeaderClass","cellEdit","dataField","isKey","editable","scope","src","planet","width","marginBottom","htmlFor","InputGroup","FormControl","onChange","maxLength","type","placeholder","step","defaultValue","Button","onClick","variant","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"kSAeaA,G,OAfc,IAAIC,IAAI,CAC/B,CAAC,QAAS,GACV,CAAC,UAAW,GACZ,CAAC,QAAS,GACV,CAAC,QAAS,GACV,CAAC,OAAQ,GACT,CAAC,QAAS,GACV,CAAC,QAAS,GACV,CAAC,SAAU,GACX,CAAC,aAAc,GACf,CAAC,UAAW,GACZ,CAAC,YAAa,GACd,CAAC,YAAa,KAG8B,CAC5C,CACIC,KAAM,KACNC,WAAY,KACZC,UAAW,MACXC,cAAe,GACfC,oBAAqB,IACvB,CACEJ,KAAM,KACNC,WAAY,KACZC,UAAW,MACXC,cAAe,GACfC,oBAAqB,MCgmBdC,E,YAhnBX,WAAYC,GAAQ,IAAD,sBACf,4CAAMA,IACN,IAAIC,EAAI,IAAIC,KACRC,EAAU,UAAMF,EAAEG,UAAR,YAAqBH,EAAEI,WAAW,EAAE,GAAG,GAAvC,OAA2CJ,EAAEI,WAAW,EAAxD,YAA6DJ,EAAEK,eAH9D,OAIf,EAAKC,MAAQ,CACTC,MAAOL,EACPM,MAAON,EACPO,MAAOP,EACPQ,MAAOR,EACPS,MAAOT,EACPU,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GACPC,QAAS,GACTC,MAAO,aACPC,cAAe,GACfC,WAAY,GACZC,cAAe,GACfC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,OAAQ,GACRC,YAAa,GACbC,WAAY,GACZC,UAAW,GACXC,gBAAiB,GACjBC,iBAAkB,GAClBC,cAAe,GACfC,mBAAoB,GACpBC,kBAAmB,GACnBC,aAAc,GACdC,QAAS,GACTC,UAAW,EACXC,YAAa,EACbC,UAAW,GACXC,UAAW,GACXC,cAAe,GACfC,SAAU,EACVC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,aAAc,GACdC,eAAgB,GAChBC,MAAO,CACH,CACIC,MAAO,QACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,UACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,QACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,QACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,OACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,QACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,QACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,SACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,aACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,UACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,YACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,IACb,CACEL,MAAO,YACPC,MAAO,GACPC,QAAS,GACTC,WAAY,GACZC,WAAY,GACZC,UAAW,KAGnBC,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QACzCC,OAAQ,KAEZ,EAAKC,iBAAmB5E,EACxB6E,QAAQC,IAAI,EAAKC,kBACjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAtJX,E,iFAyJE,IAAD,OAChBG,KAAKC,WAAWC,MAAK,SAAAC,GACjB,EAAKC,SAAS,CAACtC,cAAeqC,EAAOE,KAAKC,MAAMC,IAAIC,QAAQ,U,iCAKhE,OAAOC,IAAMC,IAAI,iE,oCAGPC,GACV,IAAIC,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAEVzE,EAAU0E,WAAWjB,KAAKrE,MAAM2D,OAAO,IAAM2B,WAAWjB,KAAKrE,MAAM2D,OAAO,IAC1E4B,EAAYD,WAAWN,EAAI,WAC3BQ,EAAuC,IAArBR,EAAI,SAAqBM,WAAWN,EAAI,eAAqBM,WAAWN,EAAI,UAC9FS,EAAQC,SAASV,EAAI,aAAmBU,SAASV,EAAI,QAAc,IACvEA,EAAI,aAAmBC,EAAUU,OAAOJ,EAAY,MACpDP,EAAI,QAAcC,EAAUU,OAAiB,IAAVJ,GACnCP,EAAI,UAAgBC,EAAUU,OAAOJ,EAAUC,GAC/CR,EAAI,UAAgBA,EAAI,UACxBA,EAAI,MAAYA,EAAI,UACpBA,EAAI,UAAgBC,EAAUU,OAAOX,EAAI,WACzCA,EAAI,eAAqBA,EAAI,OAC7BA,EAAI,WAAJ,UAAwBA,EAAI,WAA5B,YAA8CA,EAAI,YAAlD,UACAA,EAAI,MAAJ,UAAoBS,EAAOZ,QAAQ,GAAnC,QACAG,EAAI,YAAJ,aAA4BA,EAAI,YAAhC,OACAA,EAAI,OAAJ,UAAoBA,EAAI,OAAxB,YACAA,EAAI,WAAuB,IAANS,GAAYZ,QAAQ,GACzCG,EAAI,YAAkBC,EAAUU,OAAa,KAANF,GAAYG,MAAM,GAAG,GAM5DZ,EAAI,QAAcC,EAAUU,OAAO/E,GACnCoE,EAAI,cAAJ,WAA4BM,WAAWjB,KAAKrE,MAAM2D,OAAO,IAAI/C,GAASiE,QAAQ,GAA9E,YACAG,EAAI,gBAAsBC,EAAUU,OAAOL,WAAWjB,KAAKrE,MAAM2D,OAAO,KACxEqB,EAAI,iBAAuBC,EAAUU,OAAOL,WAAWjB,KAAKrE,MAAM2D,OAAO,KACzEqB,EAAI,cAAoBA,EAAI,QAC5BA,EAAI,mBAAJ,UAAgCa,KAAKC,MAAOlF,EAAQ0E,WAAWjB,KAAKrE,MAAM2D,OAAO,IAAK,KAAtF,KACAqB,EAAI,kBAAwBA,EAAI,cAChCX,KAAK0B,gBAAgBf,EAAI,MAAWC,GACpCZ,KAAK2B,iBAAiBhB,EAAI,OAAYC,K,sCAG1BgB,EAAOhB,GACnBgB,EAAQA,EAAMC,KAAI,SAAAC,GACdA,EAAQ3C,WAAR,UAAwByB,EAAUU,OAAOQ,EAAQ3C,YAAYoC,MAAM,GAAnE,OACAO,EAAQ5C,QAAR,UAAqB0B,EAAUU,OAAOQ,EAAQ5C,SAASqC,MAAM,GAA7D,OACAO,EAAQ1C,WAAR,UAAwBwB,EAAUU,OAAOQ,EAAQ1C,YAAjD,QACA0C,EAAQzC,UAAR,UAAuBuB,EAAUU,OAAOQ,EAAQzC,WAAhD,a,uCAIS0C,EAAOnB,GACpBmB,EAAM,GAAN,UAAcnB,EAAUU,OAAOS,EAAM,IAAIR,MAAM,GAA/C,OACAQ,EAAM,GAAN,UAAcnB,EAAUU,OAAOS,EAAM,IAAIR,MAAM,GAA/C,OACAQ,EAAM,GAAN,UAAcnB,EAAUU,OAAOS,EAAM,IAArC,QACAA,EAAM,GAAN,UAAcnB,EAAUU,OAAOS,EAAM,IAArC,U,qCAIA,IAAIC,EAAO,eAAOhC,KAAKrE,OACvBqG,EAAQjD,MAAQiB,KAAKrE,MAAMoD,MAAM8C,KAAI,SAAAI,GAAC,sBAASA,MAC/CD,EAAQ1C,OAASU,KAAKrE,MAAM2D,OAAOuC,KAAI,SAAAI,GAAC,sBAASA,MAEjDjC,KAAKkC,cAAcF,GACnBvB,IAAM0B,KAAN,qCAAiDH,EAAS,CACtDI,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,sBAAuB,wCACvB,4BAA6B,UAEjCC,aAAc,SAEjBnC,MAAK,SAAAoC,GACF,IAAMC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACL,EAASjC,QACpDuC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOR,EACZK,EAAKI,aAAa,WAAY,kBAC9BH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,a,mCAIAlB,GACT,GAAoB,UAAhBA,EAAEmB,OAAOC,GACT,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IACpBtD,KAAKI,SAAL,yBAAmB6B,EAAEmB,OAAOC,IAA5B,OAAiCC,GAAjC,gCAA6DrB,EAAEmB,OAAOG,cAG1EvD,KAAKI,SAAL,eAAgB6B,EAAEmB,OAAOC,GAAKpB,EAAEmB,OAAOG,U,0CAI3BC,EAAKC,GACrB,GAAIzD,KAAKrE,MAAMc,eAAiBuD,KAAKrE,MAAMe,WAAY,CACnD,IAAIgH,EAGJ,GAFAA,EAAYlC,KAAKC,MAAMR,WAAWuC,EAAG,OAAWvC,WAAWjB,KAAKrE,MAAMc,eAAewE,WAAWjB,KAAKrE,MAAMe,YAAY,IACvH+G,EAAW,GAAKzD,KAAK2D,kBAAkB,aAAcH,EAAIxE,MAAO0E,GAC5DF,EAAIpE,WAAY,CAChB,IAAIwE,EAAW5D,KAAK6D,kBAAkBL,GACtCC,EAAW,GAAKzD,KAAK2D,kBAAkB,YAAaH,EAAIxE,MAAO4E,GAC/D5D,KAAKI,UAAS,SAAA0D,GAAQ,MAAK,CACvBxE,OAAQmE,EACR1E,MAAO+E,EAAS/E,MAAM8C,KAClB,SAAAkC,GAAE,OAAIA,EAAG/E,QAAUwE,EAAIxE,MAAjB,eAA6B+E,EAA7B,CAAiC5E,WAAYuE,EAAYrE,UAAWuE,IAAYG,cAI9F/D,KAAKI,UAAS,SAAA0D,GAAQ,MAAK,CACvBxE,OAAQmE,EACR1E,MAAO+E,EAAS/E,MAAM8C,KAClB,SAAAkC,GAAE,OAAIA,EAAG/E,QAAUwE,EAAIxE,MAAjB,eAA6B+E,EAA7B,CAAiC5E,WAAYuE,IAAaK,cAK5E/D,KAAKI,SAAS,CAACd,OAAQmE,M,yCAIZD,EAAKC,M,wCA4CND,M,wCAIAQ,EAAQhF,EAAOuE,GAC7BvE,EAAQA,GAAS,eACjB,IAAI1C,EAAQ,EAQZ,OAPA0D,KAAKrE,MAAMoD,MAAMkF,SAAQ,SAAAnC,GACjBA,EAAQ9C,QAAUA,EAClB1C,GAASiH,EACFzB,EAAQkC,KACf1H,GAAS2E,WAAWa,EAAQkC,QAG7B1H,I,kCAGCkH,EAAKQ,GACb,IAAIP,EAAazD,KAAKrE,MAAM2D,OACxBhD,EAAQ0D,KAAK2D,kBAAkBK,GACnC,OAAOA,GACH,IAAK,QACDP,EAAW,IAAMnH,EAAM,IAAMkE,QAAQ,GAErCR,KAAKI,SAAS,CAACd,OAAQmE,IACvB,MACJ,IAAK,UACDA,EAAW,GAAMnH,EAAOkE,QAAQ,GAEhCR,KAAKI,SAAS,CAACd,OAAQmE,IACvB,MACJ,IAAK,aACDA,EAAW,GAAMnH,EAAOkE,QAAQ,GAChCR,KAAKI,SAAS,CAACd,OAAQmE,IACvB,MACJ,IAAK,YACDA,EAAW,GAAMnH,EAAOkE,QAAQ,GAChCR,KAAKI,SAAS,CAACd,OAAQmE,IACvB,MACJ,IAAK,aACDA,EAAW,GAAMnH,EAAOkE,QAAQ,GAChCR,KAAKI,SAAS,CAACd,OAAQmE,O,yCAKhBxB,GACf,IAAIiC,EAAWjC,EAAEmB,OAAOG,MACxBvD,KAAKI,UAAS,SAAA0D,GAAQ,MAAK,CACvBxE,OAAQwE,EAASxE,OAAOiC,MAAM,EAAE,GAAG4C,OAAO,CAAC,OAAQ,SACnD5E,OAAQ2E,EACRnF,MAAO+E,EAAS/E,MAAM8C,KAClB,SAAAkC,GAAE,sBAAUA,EAAV,CAAc3E,WAAY,GAAIC,UAAW,c,+BAK7C,IAAD,OACC+E,EAAe,CACjBC,KAAM,QACNC,YAAY,EACZC,cAAe,SAACf,EAAKQ,GAAY,EAAKQ,YAAYhB,EAAKQ,KAE3D,OACI,yBAAKS,UAAU,aACX,yBAAK1D,MAAO,CAAC2D,OAAQ,UAGrB,yBAAKD,UAAU,OACX,yBAAKA,UAAU,4BACf,kBAAC,iBAAD,CAAgBpE,KAAOL,KAAKrE,MAAMoD,MAAQ4F,iBAAkB,aAAcC,SAAUR,GAChF,kBAAC,oBAAD,CAAmBS,UAAU,QAAQC,OAAK,GAA1C,OACA,kBAAC,oBAAD,CAAmBD,UAAU,SAA7B,2BACA,kBAAC,oBAAD,CAAmBA,UAAU,WAA7B,WACA,kBAAC,oBAAD,CAAmBA,UAAU,aAAaE,UAAU,GAApD,iBACA,kBAAC,oBAAD,CAAmBF,UAAU,aAAaE,UAAU,GAApD,cACA,kBAAC,oBAAD,CAAmBF,UAAU,YAAYE,UAAU,GAAnD,8BAEA,2BAAON,UAAU,SACb,2BAAOA,UAAU,eACb,4BACI,wBAAIO,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAOhF,KAAKrE,MAAM2D,OAAO,IACnC,wBAAI0F,MAAM,OAAOhF,KAAKrE,MAAM2D,OAAO,IACnC,wBAAI0F,MAAM,OAAOhF,KAAKrE,MAAM2D,OAAO,IACnC,wBAAI0F,MAAM,OAAOhF,KAAKrE,MAAM2D,OAAO,IACnC,wBAAI0F,MAAM,OAAOhF,KAAKrE,MAAM2D,OAAO,QAMnD,yBAAKmF,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,yBAAKQ,IAAKC,IAAQR,OAAO,MAAMS,MAAM,MAAMpE,MAAO,CAACqE,aAAa,WAIxE,wBAAIX,UAAU,QAAd,oBAEA,2BAAOY,QAAQ,UAAf,WACA,kBAACC,EAAA,EAAD,CAAYb,UAAU,QAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcyD,MAAOvD,KAAKrE,MAAMiB,OAAQyG,GAAG,YAG3E,2BAAOgC,QAAQ,aAAf,aACA,kBAACC,EAAA,EAAD,CAAYb,UAAU,QAClB,kBAACc,EAAA,EAAD,CAAalC,GAAG,eAGpB,2BAAOgC,QAAQ,QAAf,UACA,kBAACC,EAAA,EAAD,CAAYb,UAAU,QAClB,kBAACc,EAAA,EAAD,CAAalC,GAAG,UAGpB,yBAAKoB,UAAU,OACX,yBAAKA,UAAU,iBACX,2BAAOY,QAAQ,WAAf,iBACA,kBAACC,EAAA,EAAD,CAAYb,UAAU,QAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,cAGrD,yBAAKoB,UAAU,iBACX,2BAAOY,QAAQ,SAAf,mBACA,kBAACC,EAAA,EAAD,CAAYb,UAAU,QAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAc2F,UAAU,IAAIpC,GAAG,aAKvE,yBAAKoB,UAAU,YACX,yBAAKA,UAAU,kBACX,2BAAOY,QAAQ,UAAf,kBACA,4BAAQG,SAAUxF,KAAKD,mBAAoBwD,MAAOvD,KAAKrE,MAAM4D,OAAQ8D,GAAG,SAASoB,UAAU,iCACvF,4BAAQlB,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,YAIZ,yBAAKkB,UAAU,OACX,yBAAKA,UAAU,iBACX,2BAAOY,QAAQ,iBAAf,iBACA,kBAACC,EAAA,EAAD,CAAYb,UAAU,QAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,oBAGrD,yBAAKoB,UAAU,iBACX,2BAAOY,QAAQ,cAAf,aACA,kBAACC,EAAA,EAAD,CAAYb,UAAU,QAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,oBAMjE,wBAAIoB,UAAU,SAEd,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBAAf,YAGA,yBAAKA,UAAU,SAAf,mBAIJ,6BACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,YAAf,YAEJ,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,SAASqC,KAAK,YAE/D,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,aAAaqC,KAAK,UAEnE,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,cAAcqC,KAAK,SAASC,YAAY,SAG7F,yBAAKlB,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,cAEnB,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,YAAYqC,KAAK,YAElE,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,eAAeqC,KAAK,WAGzE,yBAAKjB,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,cAEnB,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,YAAYqC,KAAK,YAElE,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,eAAeqC,KAAK,WAGzE,yBAAKjB,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,cAEnB,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,YAAYqC,KAAK,YAElE,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,eAAeqC,KAAK,WAGzE,yBAAKjB,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,cAEnB,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,YAAYqC,KAAK,YAElE,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,eAAeqC,KAAK,WAGzE,yBAAKjB,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,cAEnB,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,YAAYqC,KAAK,YAElE,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,eAAeqC,KAAK,WAGzE,yBAAKjB,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,cAEnB,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,YAAYqC,KAAK,YAElE,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,eAAeqC,KAAK,WAGzE,yBAAKjB,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,cAEnB,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,YAAYqC,KAAK,YAElE,kBAACJ,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,eAAeqC,KAAK,WAGzE,6BACA,yBAAKjB,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOY,QAAQ,aAAf,sBAEJ,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAaC,SAAUxF,KAAKF,aAAcuD,GAAG,YAAYuC,KAAK,MAAMD,YAAY,MAAMD,KAAK,YAE/F,yBAAKjB,UAAU,SACX,2BAAOY,QAAQ,YAAf,oBAEJ,kBAACC,EAAA,EAAD,CAAYb,UAAU,cAClB,kBAACc,EAAA,EAAD,CAAalC,GAAG,WAAWuC,KAAK,MAAMJ,SAAUxF,KAAKF,aAAc4F,KAAK,SAASG,aAAc7F,KAAKrE,MAAMmC,kBAGlH,6BACA,yBAAK2G,UAAU,OACX,yBAAKA,UAAU,kBACX,kBAACqB,EAAA,EAAD,CAAQC,QAAS/F,KAAKJ,aAAcoG,QAAQ,UAAU3C,GAAG,SAAStC,MAAO,CAACoE,MAAO,SAAjF,YAIR,4BAAQV,UAAU,+CACd,uBAAGA,UAAU,QAAb,iEACA,wBAAIA,UAAU,eACV,wBAAIA,UAAU,oBAAmB,uBAAG1B,KAAK,KAAR,YACjC,wBAAI0B,UAAU,oBAAmB,uBAAG1B,KAAK,KAAR,UACjC,wBAAI0B,UAAU,oBAAmB,uBAAG1B,KAAK,KAAR,mB,GAzmBhCkD,IAAMC,WCGhBC,MARf,WACE,OACE,yBAAK1B,UAAU,OACb,kBAAC,EAAD,QCIc2B,QACW,cAA7B5D,OAAO6D,SAASC,UAEe,UAA7B9D,OAAO6D,SAASC,UAEhB9D,OAAO6D,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OAAO,kBAAC,EAAD,MAAS5D,SAAS6D,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3G,MAAK,SAAA4G,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.eb52cdb5.chunk.js","sourcesContent":["export const months_temp = new Map([\n    [\"Enero\", 0],\n    [\"Febrero\", 0],\n    [\"Marzo\", 0],\n    [\"Abril\", 0],\n    [\"Mayo\", 1],\n    [\"Junio\", 1],\n    [\"Julio\", 1],\n    [\"Agosto\", 1],\n    [\"Septiembre\", 1],\n    [\"Octubre\", 1],\n    [\"Noviembre\", 0],\n    [\"Diciembre\", 0]\n]);\n\nexport const pay_before_temp_costs_domestic_1 = [\n    {\n        bajo: 0.793,\n        intermedio: 0.956,\n        excedente: 2.802,\n        cantidad_bajo: 75,\n        cantidad_intermedio: 65\n    },{\n        bajo: 0.793,\n        intermedio: 0.956,\n        excedente: 2.802,\n        cantidad_bajo: 75,\n        cantidad_intermedio: 65\n    }\n];","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport planet from './../planet.png';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../node_modules/react-bootstrap-table/css/react-bootstrap-table.css';\nimport { months_temp, pay_before_temp_costs_domestic_1 } from './variablesDomestic';\n\nclass EntireForm extends React.Component {\n    constructor(props) {\n        super(props);\n        let b = new Date();\n        let dateFormat = `${b.getDate()}/${b.getMonth()>8?\"\":0}${b.getMonth()+1}/${b.getFullYear()}`;\n        this.state = {\n            date1: dateFormat,\n            date2: dateFormat,\n            date3: dateFormat,\n            date4: dateFormat,\n            date5: dateFormat,\n            quote1: \"\",\n            quote2: \"\",\n            quote3: \"\",\n            quote4: \"\",\n            quote5: \"\",\n            total: \"\",\n            savings: \"\",\n            anual: \"25 años\",\n            sistema_solar: \"\",\n            eficiencia: \"\",\n            invest_return: \"\",\n            client: \"\",\n            service: \"\",\n            power: \"\",\n            panels: \"\",\n            panel_power: \"\",\n            panel_desc: \"\",\n            total_big: \"\",\n            anual_pay_solar: \"\",\n            anual_pay_actual: \"\",\n            savings_chart: \"\",\n            savings_proportion: \"\",\n            invest_return_big: \"\",\n            subtotal_usd: \"\",\n            iva_usd: \"\",\n            saved_co2: 0,\n            saved_trees: 0,\n            total_usd: \"\",\n            total_mxn: \"\",\n            currency_rate: \"\",\n            usd_rate: 0,\n            quantity1: \"\",\n            description1: \"\",\n            quantity2: \"\",\n            description2: \"\",\n            quantity3: \"\",\n            description3: \"\",\n            quantity4: \"\",\n            description4: \"\",\n            quantity5: \"\",\n            description5: \"\",\n            quantity6: \"\",\n            description6: \"\",\n            quantity7: \"\",\n            description7: \"\",\n            panel_quantity: \"\",\n            table: [\n                {\n                    month: 'Enero',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Febrero',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Marzo',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Abril',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Mayo',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Junio',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Julio',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Agosto',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Septiembre',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Octubre',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Noviembre',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                },{\n                    month: 'Diciembre',\n                    hours: '',\n                    consume: '',\n                    production: '',\n                    pay_before: '',\n                    pay_after: ''\n                }\n            ],\n            totals: [\"0.00\", \"0.00\", \"0.00\", \"0.00\", \"0.00\"],\n            tarifa: \"1\"\n        }\n        this.pay_before_temps = pay_before_temp_costs_domestic_1;\n        console.log(this.pay_before_table)\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeSelect = this.handleChangeSelect.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRates().then(result =>{\n            this.setState({currency_rate: result.data.rates.MXN.toFixed(2)})\n        });\n    }\n\n    getRates() {\n        return axios.get(\"https://api.exchangeratesapi.io/latest?symbols=MXN&base=USD\");\n    }\n\n    format_output(dict) {\n        var formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n        });\n        let savings = parseFloat(this.state.totals[3]) - parseFloat(this.state.totals[4]);\n        let usd_value = parseFloat(dict[\"total_usd\"]);\n        let currency_factor = dict[\"usd_rate\"] === 0 ? parseFloat(dict[\"currency_rate\"]) : parseFloat(dict[\"usd_rate\"]);\n        let watts = parseInt(dict[\"panel_power\"]) * parseInt(dict[\"panels\"]) / 1000;\n        dict[\"subtotal_usd\"] = formatter.format(usd_value / 1.16);\n        dict[\"iva_usd\"] = formatter.format(usd_value*0.16);\n        dict[\"total_mxn\"] = formatter.format(usd_value*currency_factor);\n        dict[\"total_big\"] = dict[\"total_mxn\"];\n        dict[\"total\"] = dict[\"total_mxn\"];\n        dict[\"total_usd\"] = formatter.format(dict[\"total_usd\"]);\n        dict[\"panel_quantity\"] = dict[\"panels\"];\n        dict[\"panel_desc\"] = `${dict[\"panel_desc\"]} ${dict[\"panel_power\"]} watts`;\n        dict[\"power\"] = `${(watts).toFixed(2)} KWp`\n        dict[\"panel_power\"] = `De ${dict[\"panel_power\"]} Wp`;\n        dict[\"panels\"] = `${dict[\"panels\"]} paneles`;\n        dict[\"saved_co2\"] = (watts*0.78).toFixed(3);\n        dict[\"saved_trees\"] = formatter.format(watts*11.7).slice(1,-3);\n        /*for (let i = 1; i <= 7; i++) {\n            if (dict[`quantity${i}`]) {\n                dict[`quantity${i}`] = parseInt(dict[`quantity${i}`]).toFixed(2);\n            }\n        }*/\n        dict[\"savings\"] = formatter.format(savings);\n        dict[\"invest_return\"] = `${(parseFloat(this.state.totals[4])/savings).toFixed(1)} años`;\n        dict[\"anual_pay_solar\"] = formatter.format(parseFloat(this.state.totals[4]));\n        dict[\"anual_pay_actual\"] = formatter.format(parseFloat(this.state.totals[3]));\n        dict[\"savings_chart\"] = dict[\"savings\"];\n        dict[\"savings_proportion\"] = `${Math.round((savings/parseFloat(this.state.totals[3]))*100)}%`;\n        dict[\"invest_return_big\"] = dict[\"invest_return\"];\n        this.formatDictTable(dict[\"table\"], formatter);\n        this.formatDictTotals(dict[\"totals\"], formatter);\n    }\n\n    formatDictTable(tabla, formatter) {\n        tabla = tabla.map(element => {\n            element.production = `${formatter.format(element.production).slice(1)}KWh`;\n            element.consume = `${formatter.format(element.consume).slice(1)}KWh`;\n            element.pay_before = `${formatter.format(element.pay_before)} MXN`;\n            element.pay_after = `${formatter.format(element.pay_after)} MXN`;\n        });\n    }\n\n    formatDictTotals(lista, formatter) {\n        lista[1] = `${formatter.format(lista[1]).slice(1)}KWh`;\n        lista[2] = `${formatter.format(lista[2]).slice(1)}KWh`;\n        lista[3] = `${formatter.format(lista[3])} MXN`;\n        lista[4] = `${formatter.format(lista[4])} MXN`;\n    }\n\n    handleSubmit() {\n        let to_send = {...this.state};\n        to_send.table = this.state.table.map(e => ({...e}));\n        to_send.totals = this.state.totals.map(e => ({...e}))\n\n        this.format_output(to_send);\n        axios.post(`https://57d3a4c2.ngrok.io/generate`, to_send, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow_Origin': '*',\n                'Content-Disposition': 'attachment; filename=\"cotizacion.pdf\"',\n                'Content-Transfer-Encoding': 'binary'\n            },\n            responseType: 'blob'\n        })\n        .then(response => {\n            const url = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', 'cotizacion.pdf');\n            document.body.appendChild(link);\n            link.click();\n        })\n    };\n\n    handleChange(e) {\n        if (e.target.id === 'quote' ) {\n            for (let i = 1; i <= 5; i++) {\n                this.setState({[`${e.target.id}${i}`]: `No. de cotización: ${e.target.value}`});\n            }\n        } else {\n            this.setState({[e.target.id]: e.target.value});\n        }\n    }\n\n    calculateProduction(row, new_totals) {\n        if (this.state.sistema_solar && this.state.eficiencia) {\n            let new_value = \"\";\n            new_value = Math.round(parseFloat(row[\"hours\"])*parseFloat(this.state.sistema_solar)*parseFloat(this.state.eficiencia)*31);\n            new_totals[2] = this.calculateNewTotal(\"production\", row.month, new_value);\n            if (row.pay_before) {\n                let payAfter = this.calculatePayAfter(row);\n                new_totals[4] = this.calculateNewTotal(\"pay_after\", row.month, payAfter);\n                this.setState(oldState => ({\n                    totals: new_totals,\n                    table: oldState.table.map(\n                        el => el.month === row.month? { ...el, production: new_value , pay_after: payAfter }: el\n                    )\n                }));\n            } else {\n                this.setState(oldState => ({\n                    totals: new_totals,\n                    table: oldState.table.map(\n                        el => el.month === row.month? { ...el, production: new_value }: el\n                    )\n                }));\n            }\n        } else {\n            this.setState({totals: new_totals});\n        }\n    }\n\n    calculatePayBefore(row, new_totals) {\n        /*let consume = parseFloat(row.consume);\n        let tmp_row = {\n            bajo: consume > this.pay_before_temps[months_temp[row.month]].cantidad_bajo? this.pay_before_temps[months_temp[row.month]].cantidad_bajo : 0,\n            intermedio: 0,\n            intermedio_alto: 0,\n            total: 0\n        }\n        let overhead = 0;\n        if (months_temp[row.month] === 0) {\n            tmp_row.intermedio = consume - tmp_row.bajo > 150 ? this.pay_before_temps[months_temp[row.month]].intermedio : 0;\n            tmp_row.total = tmp_row.intermedio + tmp_row.bajo;\n            overhead = consume > tmp_row.total ? consume - tmp_row.total : 0 ;\n        } else {\n            tmp_row.intermedio = consume - tmp_row.bajo > 300 ? this.pay_before_temps[months_temp[row.month]].intermedio : consume - tmp_row.bajo;\n            //tmp_row.intermedio_alto = consume - tmp_row.bajo - tmp_row.intermedio > this.pay_before_temps.cantidad_intermedio_alto ? : ;\n\n        };\n        //let overhead = parseFloat(row.consume) > (tmp_row.bajo+tmp_row.intermedio) ?\n                            //parseFloat(row.consume) - (tmp_row.bajo+tmp_row.intermedio) : 0;\n        let new_pay_before = tmp_row.bajo*this.pay_before_temps[tmp_row.temporada].bajo\n                                +tmp_row.intermedio*this.pay_before_temps[tmp_row.temporada].intermedio\n                                +overhead*this.pay_before_temps[tmp_row.temporada].excedente;\n        let new_value = Math.round(new_pay_before);\n        new_totals[3] = this.calculateNewTotal(\"pay_before\", row.month, new_value);\n        if (row.production) {\n            let payAfter = this.calculatePayAfter(row);\n            new_totals[4] = this.calculateNewTotal(\"pay_after\", row.month, payAfter);\n            this.setState(oldState => ({\n                totals: new_totals,\n                table: oldState.table.map(\n                    el => el.month === row.month? { ...el, pay_before: new_value, pay_after: payAfter }: el\n                )\n            }));\n        } else {\n            this.setState(oldState => ({\n                totals: new_totals,\n                table: oldState.table.map(\n                    el => el.month === row.month? { ...el, pay_before: new_value }: el\n                )\n            }));\n        }*/\n    }\n\n    calculatePayAfter(row) {\n\n    }\n\n    calculateNewTotal(column, month, value) {\n        month = month || \"not_assigned\";\n        let total = 0;\n        this.state.table.forEach(element => {\n            if (element.month === month) {\n                total += value;\n            } else if (element[column]) {\n                total += parseFloat(element[column]);\n            }\n        });\n        return total;\n    }\n\n    forceUpdate(row, column) {\n        let new_totals = this.state.totals;\n        let total = this.calculateNewTotal(column);\n        switch(column) {\n            case 'hours':\n                new_totals[0] = (total/12.0).toFixed(2);\n                //this.calculateProduction(row, new_totals);\n                this.setState({totals: new_totals});\n                break;\n            case 'consume':\n                new_totals[1] = (total).toFixed(2);\n                //this.calculatePayBefore(row, new_totals);\n                this.setState({totals: new_totals});\n                break;\n            case 'pay_before':\n                new_totals[3] = (total).toFixed(2);\n                this.setState({totals: new_totals});\n                break;\n            case 'pay_after':\n                new_totals[4] = (total).toFixed(2);\n                this.setState({totals: new_totals});\n                break;\n            case 'production':\n                new_totals[2] = (total).toFixed(2);\n                this.setState({totals: new_totals});\n                break;\n        }\n    }\n\n    handleChangeSelect(e) {\n        let new_rate = e.target.value;\n        this.setState(oldState => ({\n            totals: oldState.totals.slice(0,3).concat([\"0.00\", \"0.00\"]),\n            tarifa: new_rate,\n            table: oldState.table.map(\n                el => ({ ...el, pay_before: \"\", pay_after: \"\" })\n            )\n        }));\n    }\n\n    render() {\n        const cellEditProp = {\n            mode: 'click',\n            blurToSave: true,\n            afterSaveCell: (row, column) => {this.forceUpdate(row, column)}\n        };\n        return (\n            <div className=\"container\">\n                <div style={{height: \"10vh\"}}>\n\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-8 order-md-2 mb-4\">\n                    <BootstrapTable data={ this.state.table } tableHeaderClass={\"thead-dark\"} cellEdit={cellEditProp}>\n                        <TableHeaderColumn dataField='month' isKey>Mes</TableHeaderColumn>\n                        <TableHeaderColumn dataField='hours'>Horas de irradiación</TableHeaderColumn>\n                        <TableHeaderColumn dataField='consume'>Consumo</TableHeaderColumn>\n                        <TableHeaderColumn dataField='production' editable={true}>Producción</TableHeaderColumn>\n                        <TableHeaderColumn dataField='pay_before' editable={true}>Pago antes</TableHeaderColumn>\n                        <TableHeaderColumn dataField='pay_after' editable={true}>Pago con energía solar</TableHeaderColumn>\n                    </BootstrapTable>\n                        <table className=\"table\">\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th scope=\"col\">Total</th>\n                                    <th scope=\"col\">{this.state.totals[0]}</th>\n                                    <th scope=\"col\">{this.state.totals[1]}</th>\n                                    <th scope=\"col\">{this.state.totals[2]}</th>\n                                    <th scope=\"col\">{this.state.totals[3]}</th>\n                                    <th scope=\"col\">{this.state.totals[4]}</th>\n                                </tr>\n                            </thead>\n                        </table>\n                    </div>\n\n                    <div className=\"col-md-4 order-md-1\">\n                        <div className=\"row\">\n                            <div className=\"col-6 offset-3\">\n                                <img src={planet} height=\"120\" width=\"120\" style={{marginBottom:\"2vh\"}} />\n                            </div>\n                        </div>\n\n                        <h4 className=\"mb-3\">Arma tu proyecto</h4>\n\n                        <label htmlFor=\"client\">Cliente</label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl onChange={this.handleChange} value={this.state.client} id=\"client\" />\n                        </InputGroup>\n\n                        <label htmlFor=\"direccion\">Direccion</label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl id=\"direccion\" />\n                        </InputGroup>\n\n                        <label htmlFor=\"city\">Ciudad</label>\n                        <InputGroup className=\"mb-3\">\n                            <FormControl id=\"city\"/>\n                        </InputGroup>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"service\"># Servicio</label>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl onChange={this.handleChange} id=\"service\" />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"quote\"># Cotizacion</label>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl onChange={this.handleChange} maxLength=\"4\" id=\"quote\" />\n                                </InputGroup>\n                            </div>\n                        </div>\n\n                        <div className=\"row mb-3\">\n                            <div className=\"col-md-12 mb-3\">\n                                <label htmlFor=\"tarifa\">Tipo de tarifa</label>\n                                <select onChange={this.handleChangeSelect} value={this.state.tarifa} id=\"tarifa\" className=\"browser-default custom-select\">\n                                    <option value=\"1\">1</option>\n                                    <option value=\"1A\">1A</option>\n                                    <option value=\"1B\">1B</option>\n                                    <option value=\"1C\">1C</option>\n                                    <option value=\"1D\">1D</option>\n                                    <option value=\"1E\">1E</option>\n                                    <option value=\"1F\">1F</option>\n                                    <option value=\"PDBT\">PDBT</option>\n                                    <option value=\"GDMTH\">GDMTH</option>\n                                    <option value=\"GDMTO\">GDMTO</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"sistema_solar\">Sistema solar</label>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl onChange={this.handleChange} id=\"sistema_solar\" />\n                                </InputGroup>\n                            </div>\n                            <div className=\"col-md-6 mb-3\">\n                                <label htmlFor=\"eficiencia\">Eficienca</label>\n                                <InputGroup className=\"mb-3\">\n                                    <FormControl onChange={this.handleChange} id=\"eficiencia\" />\n                                </InputGroup>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr className=\"mb-4\" />\n\n                <div className=\"row\">\n                    <div className=\"col-2 offset-2\">\n                        Cantidad\n                    </div>\n                    <div className=\"col-8\">\n                        Descripción\n                    </div>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"inversor\">Paneles</label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"panels\" type=\"number\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-6\">\n                        <FormControl onChange={this.handleChange} id=\"panel_desc\" type=\"text\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"panel_power\" type=\"number\" placeholder=\"Wp\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity1\" type=\"number\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description1\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity2\" type=\"number\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description2\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity3\" type=\"number\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description3\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity4\" type=\"number\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description4\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity5\" type=\"number\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description5\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity6\" type=\"number\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description6\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"inversor\"></label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-2\">\n                        <FormControl onChange={this.handleChange} id=\"quantity7\" type=\"number\"/>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3 col-8\">\n                        <FormControl onChange={this.handleChange} id=\"description7\" type=\"text\"/>\n                    </InputGroup>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"total_usd\">Costo en dolares:</label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-4\">\n                        <FormControl onChange={this.handleChange} id=\"total_usd\" step=\"any\" placeholder=\"USD\" type=\"number\"/>\n                    </InputGroup>\n                    <div className=\"col-2\">\n                        <label htmlFor=\"usd_rate\">Tasa de cambio:</label>\n                    </div>\n                    <InputGroup className=\"mb-3 col-4\">\n                        <FormControl id=\"usd_rate\" step=\"any\" onChange={this.handleChange} type=\"number\" defaultValue={this.state.currency_rate}/>\n                    </InputGroup>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-3 offset-9\">\n                        <Button onClick={this.handleSubmit} variant=\"primary\" id=\"submit\" style={{width: \"100%\"}}>Enviar</Button>\n                    </div>\n                </div>\n\n                <footer className=\"my-5 pt-5 text-muted text-center text-small\">\n                    <p className=\"mb-1\">&copy; 2020-2022 Centro de Inteligencia en Ahorro de Energía</p>\n                    <ul className=\"list-inline\">\n                        <li className=\"list-inline-item\"><a href=\"#\">Privacy</a></li>\n                        <li className=\"list-inline-item\"><a href=\"#\">Terms</a></li>\n                        <li className=\"list-inline-item\"><a href=\"#\">Support</a></li>\n                    </ul>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default EntireForm;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport EntireForm from './presentational/EntireForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EntireForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/planet.2e71a093.png\";"],"sourceRoot":""}